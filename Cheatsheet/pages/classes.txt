//phil welsby - 11 sept 2021

LINK: https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Classes

Class declarations

One way to define a class is using a class declaration. To declare a class, 
you use the class keyword with the name of the class ("Rectangle" here).

class Rectangle {
  constructor(height, width) {
    this.height = height;
    this.width = width;
  }
}

Hoisting

An important difference between function declarations and class declarations is that function declarations 
are hoisted and class declarations are not. You first need to declare your class and then access it, 
otherwise code like the following will throw a ReferenceError:

const p = new Rectangle(); // ReferenceError

class Rectangle {}

Class expressions

A class expression is another way to define a class. Class expressions can be named or unnamed. 
The name given to a named class expression is local to the class's body. However, it can be 
accessed via the name property.

// unnamed
let Rectangle = class {
  constructor(height, width) {
    this.height = height;
    this.width = width;
  }
};
console.log(Rectangle.name);
// output: "Rectangle"

// named
let Rectangle = class Rectangle2 {
  constructor(height, width) {
    this.height = height;
    this.width = width;
  }
};
console.log(Rectangle.name);
// output: "Rectangle2"

